@BUTTON_GFX_1 = "GFX_idea_RUS_PERSONALITIES_1"
@BUTTON_GFX_0 ="GFX_idea_RUS_PERSONALITIES_1"
scripted_gui = {
	Personalities_Rus= {
	
		context_type = decision_category
		
		window_name = "Personalities_Rus_container"

		visible = {
			tag = RUS
		}

		effects = {
			#Example Buttons to show it working
			Buttons_Array_Button_click = {
				set_variable = { RUS.RUS_PERSONALITIES_selected = v }
					meta_effect = {
						text = {
							[character_token] = {
								set_variable = { RUS.SELECTED_LOYALITY = loyality }
								set_variable = { RUS.SELECTED_INFLUENCE = influence }
								set_variable = { RUS.SELECTED_IDEOLOGY = ideology }
								set_variable = { RUS.SELECTED_WORK = work }
								set_variable = { RUS.SELECTED_SELECTED_FOCUS = selected_focus }
								set_variable = { RUS.SELECTED_PAST_FOCUS = past_focus }

							}

						}
						
						character_token = "[?RUS_PERSONALITIES_selected.GetTokenKey]"
						# it's very important to use GetTokenKey to make sure that you get the text in the variable
						# if you want to use the text in the variable as a localisation key, use GetTokenLocalisationKey instead
						# if you have any trouble with GetTokenKey and GetTokeLocalisationKey, you can check it out in the page "Variable" of the HOI4 wiki
						
					}
			}			
			Button_Back_click = {
				set_variable = {
					var = RUS.RUS_PERSONALITIES_selected
					value = 0
				}
			}	

		}
		triggers = {
			Buttons_Array_Button_visible = {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = equals }
			}		
			Buttons_Array_Icon = {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = equals }
			}	
			File_Text_visible = {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = equals }
			}
			right_vertical_slider_intel_visible = {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = equals }
			}



			Button_Back_click_enabled= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_portrait_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_stats_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_selected_focus_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_selected_focus_bg_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_past_focus_bg_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
			OPEN_past_focus_visible= {
				check_variable = { var = RUS.RUS_PERSONALITIES_selected value = 0 compare = not_equals }
			}
		}
		properties = {
			Buttons_Array_Button = {
				image = "GFX_small_[?v.GetTokenKey]"
			}
			OPEN_portrait = {
				image = "GFX_big_[?RUS.RUS_PERSONALITIES_selected.GetTokenKey]"
			}
		}
		
		dynamic_lists = {
			Buttons_Array_Grid_Box = {
					#The array to use. Will call a gui for each index.
					array = RUS_PERSONALITIES_COLVO

					#value of the current array index. Optional. Default value is v.
					value = v

					#current array index. Optional. Default value is i.
					index = i
					
					#This will change the scope to the value if yes
					change_scope = yes

					#The GUI drawn for each index
					entry_container = "Buttons_Array"
			}
			
		}
	}
}