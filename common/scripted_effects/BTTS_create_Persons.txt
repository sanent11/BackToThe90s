BTTS_persons_focus_vybor = {

			if = {
				limit = {
					check_variable = { var = namerenie  value = 25 compare = greater_than_or_equals }

				}
			}
				if = {
					limit = {
						check_variable = { var = loyality  value = 60 compare = greater_than_or_equals }
	
					}
					set_temp_variable = {
						loyality_plus = loyality
					}
					set_temp_variable = {
						loyality_minus = 0
					}
				}
				else_if = {
					limit = {
						check_variable = { var = loyality  value = 40 compare = greater_than_or_equals }
	
					}
					set_temp_variable = {
						loyality_plus = 6
					}
					set_temp_variable = {
						loyality_minus = 6
					}
				}
				else = {
					set_temp_variable = {
					
						loyality_plus = 0
						
					}
					set_temp_variable = {
						loyality_minus = 100
					}
					subtract_from_temp_variable = {
						loyality_minus = loyality

					}					
				}			
				if = {
					limit = {
						check_variable = { var = influence  value = 25 compare = greater_than_or_equals }
	
					}
					set_temp_variable = {
					
						influence_test = influence 
					}
				}
				else = {
					set_temp_variable = {
					
						influence_test = 0 
					}
				
				}
				random_list = {
					influence_test = {
		
						random_list = {
							loyality_plus = {
								random_list = {
									100 = {
										set_variable = { selected_focus = 3 }
										set_variable = { time_focus = 1 }

									}
								}							
							}
							25 = {
								random_list = {
									100 = {
										set_variable = { selected_focus = 1 }
										set_variable = { time_focus = 1 }

									}
								}
							}
							loyality_minus = {
								random_list = {
									100 = {
										set_variable = { selected_focus = 2 }
										set_variable = { time_focus = 1 }
										
									}
								}
							}
					}
				}
				40 = {
					set_variable = { selected_focus = 4 }
					set_variable = { time_focus = 1 }

				}
				
			}
	}

BTTS_persons_focus_gotovo = {
	subtract_from_variable = { time_focus = 1 }
	if = {
		limit = {
		}
		if = {
			limit = {
				check_variable = { var = selected_focus value = 1 compare = equals }
			}	
			subtract_from_variable = { influence = 5 }
				clamp_variable = {
					var = influence
					min = 0
					max = 100
				}
				
		}
		if = {
			limit = {
				check_variable = { var = selected_focus value = 2 compare = equals }
			}	
			subtract_from_variable = { influence = 5 }
				clamp_variable = {
					var = influence
					min = 0
					max = 100
				}
				add_popularity = {
					ideology = RUS
					popularity = -0.02
				}
				every_character = {
					limit = {
						subtract_from_variable = { loyality = 2 }
								clamp_variable = {
								var = loyality
								min = 0
								max = 100
								}
					}
				}
		}
		if = {
			limit = {
				check_variable = { var = selected_focus value = 3 compare = equals }
			}	
			subtract_from_variable = { influence = 5 }
						clamp_variable = {
					var = influence
					min = 0
					max = 100
				}
			add_political_power = 5
		}
		if = {
			limit = {
				check_variable = { var = selected_focus value = 4 compare = equals }
			}	
			add_to_variable = { influence = 1 }
			clamp_variable = {
				var = influence
				min = 0
				max = 100
			}
		}
		set_variable = { past_focus = selected_focus }

		BTTS_persons_focus_vybor = yes
		
	}

}
BTTS_persons_updateSelected = {
			meta_effect = {
						text = {
							[character_token] = {
								set_variable = { RUS.SELECTED_LOYALITY = loyality }
								set_variable = { RUS.SELECTED_INFLUENCE = influence }
								set_variable = { RUS.SELECTED_IDEOLOGY = ideology }
								set_variable = { RUS.SELECTED_WORK = work }
								set_variable = { RUS.SELECTED_SELECTED_FOCUS = selected_focus }
								set_variable = { RUS.SELECTED_PAST_FOCUS = past_focus }

							}

						}
						character_token = "[?RUS_PERSONALITIES_selected.GetTokenKey]"
						# it's very important to use GetTokenKey to make sure that you get the text in the variable
						# if you want to use the text in the variable as a localisation key, use GetTokenLocalisationKey instead
						# if you have any trouble with GetTokenKey and GetTokeLocalisationKey, you can check it out in the page "Variable" of the HOI4 wiki
						
					}
}
BTTS_persons_focus_AddInfluence = {
	add_to_variable = { influence = 1 }
	clamp_variable = {
		var = influence
		min = 0
		max = 100
	}
}